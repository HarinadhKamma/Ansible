---
- name: default function 
  hosts: local
  connection: local
  vars:
   technologies: Ansible,AWS,Terraform # string
   gmail: HARINADHKAMMA@GMAIL.COM
   ipaddr: 1999127.0.0.1
   #dictonary = map
   maptolist: 
    application: Payment
    environment: Dev
   listtomap:
    - key: application
      value: Payment
    - key: Env
      value: prd
  tasks: 
    - name: print the name with default
      ansible.builtin.debug:
        msg: "Default variable name is: {{ name | default('hari') }}"

    - name: print the list values
      ansible.builtin.debug:
        msg: "List values are: {{ technologies | split(',')}}" # convert string to a list by using split fucntion and convert to a list
        # output => ['Ansible' ,'AWS', 'Terraform']

    - name: print the map to list values
      ansible.builtin.debug:
        msg: "MaptoList values are: {{ maptolist | dict2items }}"
         #"MaptoList values are: [{'key': 'application', 'value': 'Payment'}, {'key': 'environment', 'value': 'Dev'}]"

    - name: print the list to map values
      ansible.builtin.debug:
        msg: "list to map values are: {{ listtomap | items2dict}}"
        #"list to map values are: {'application': 'Payment', 'Env': 'prd'}"

    - name: read yaml and take it into a variable
      ansible.builtin.set_fact:
        student_yaml: "{{ lookup('file', 'student.yaml'| from_yaml )}}"

    - name: converts the yaml to json
      ansible.builtin.debug:
        msg: "json: {{ student_yaml | to_json }}"

    - name: save json to file
      ansible.builtin.copy:
        dest: ./student-data.json
        content: "{{ student_yaml | to_nice_json  }}"
    
    - name: convert to lowercase
      ansible.builtin.debug:
        msg: "lowercase value is:{{ gmail | lower}}"

    - name: validate ipv4 addresses
      ansible.builtin.debug:
        msg: "{{ ipaddr is ansible.utils.ipv4 }}"

    - name: grep for the root
      ansible.builtin.shell: cat /etc/passwd | grep root
      register: command_output
    - name: print the output
      ansible.builtin.debug:
        msg: "{{ command_output }}"

        

    
